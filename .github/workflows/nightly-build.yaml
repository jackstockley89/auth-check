name: Nightly Build

on:
  schedule:
    - cron: '00 01 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  docker:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    name: Build container and push to DockerHub
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: assignee
            image: jackstock8904/assignee
            build-args: DIRECTORY=assignee COMMAND=assignee
          - name: auth-check
            image: jackstock8904/auth-check
            build-args: DIRECTORY=auth-check COMMAND=auth-check
          - name: close-pr
            image: jackstock8904/close-pr
            build-args: DIRECTORY=close-pr COMMAND=close-pr
          - name: version-check
            image: jackstock8904/version-check
            build-args: DIRECTORY=version-check COMMAND=version-check
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: version_check
        name: Version check
        uses: docker://jackstock8904/version-check:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output
        run: echo ${{steps.version_check.outputs.release_tag}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Get Tags for Image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: latest=false
          images: ${{ matrix.image }}
          tags: type=semver,suffix=-nightly,pattern={{version}},value=${{ steps.version_check.outputs.release_tag }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: ${{ matrix.build-args}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}